package team87;

import java.awt.*;
import java.awt.event.*;
import java.awt.geom.Ellipse2D;
import java.util.*;

import javax.swing.*;



public class StateDiagram extends JComponent{
	private final ArrayList<Shape> shapes;
	double startX;
	double startY;
	boolean dragged;
	Shape tempShape;
	public StateDiagram() {
		
        shapes = new ArrayList<>();
        addMouseListener(new MouseAdapter() {
            @Override
            public void mousePressed(MouseEvent me)
            {
            	startX = me.getX();
            	startY = me.getY();
            	for (Shape s : shapes) {
            		
                    if (s.contains(me.getPoint())) {                                      
                    	dragged = true;
                    	tempShape = s;
                    }
                }
            	

            	repaint();
            }
            public void mouseDragged(MouseEvent me)
            {
            	if(dragged)
            	{
            		double mx = me.getX();
                    double my = me.getY();
                    tempShape.intersects(mx-startX,my-startY, 100,100);
            	}
            	

                repaint();  
            }
            public void mouseClicked(MouseEvent me) {
            	 
            	 
            	shapes.add(new myEllipse(me.getX()-50, me.getY()-50, 100, 100,"asdf"));
            	Ellipse2D.Double e = new Ellipse2D.Double(me.getX()-50, me.getY()-50, 100, 100);
                repaint();
            }
        });
    }
	
	protected void paintComponent(Graphics grphcs) {
        
        Graphics2D g2d = (Graphics2D) grphcs;
        for (Shape s : shapes) {
            g2d.draw(s);
            g2d.drawString(((myEllipse)s).getTitle(),((myEllipse)s).getx() , ((myEllipse)s).gety());
        }
    }
	
	
}
